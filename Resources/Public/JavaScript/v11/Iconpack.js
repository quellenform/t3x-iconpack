/*
 * This file is part of the "iconpack" Extension for TYPO3 CMS.
 *
 * Conceived and written by Stephan Kellermayr
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 */
var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};define(['require','exports','TYPO3/CMS/Core/Ajax/AjaxRequest','TYPO3/CMS/Backend/Icons'],function(e,t,i,n){'use strict';var o;i=__importDefault(i),n=__importDefault(n),function(e){e.modalFooter='.modal-footer',e.styles='#iconpack-style',e.options='#iconpack-options',e.icons='#iconpack-icons',e.tooltip='#iconpack-tooltip',e.iconSelection='#iconpack-selected > div',e.search='#iconpack-search',e.optionsSection='.form-section',e.styleSheets='#iconpack-stylesheets'}(o||(o={}));const l=new class{constructor(){this.iconpackModal=null,this.fieldType=null,this.iconfig=null,this.iconfigBackup=null,this.elementSearch=null,this.elementOptions=null,this.elementIcons=null,this.elementTooltip=null,this.elementStyles=null,this.elementModalFooter=null,this.elementIconSelection=null,this.windowRef=window,this.documentRef=document}get document(){return this.documentRef}get window(){return this.windowRef}initialize(e,t,i){this.iconpackModal=e,this.iconfig=this.convertIconfigToObject(t),this.iconfigBackup=this.iconfig,this.fieldType=i}initializeContent(){if(this.initializeElements(),this.injectCSS(),void 0!==this.elementStyles&&null!=this.elementStyles)this.initializeStyleField(),this.initializeOptionFields(),this.initializeIconWall(),this.initializeSearchField();else{const e=this.elementModalFooter.querySelector('button[name="clear"]');e.style.display='none';const t=this.elementModalFooter.querySelector('button[name="ok"]');t.style.display='none'}}initializeElements(){this.elementModalFooter=this.iconpackModal.querySelector(o.modalFooter),this.elementStyles=this.iconpackModal.querySelector(o.styles),this.elementOptions=this.iconpackModal.querySelector(o.options),this.elementIcons=this.iconpackModal.querySelector(o.icons),this.elementTooltip=this.iconpackModal.querySelector(o.tooltip),this.elementIconSelection=this.iconpackModal.querySelector(o.iconSelection),this.elementSearch=this.iconpackModal.querySelector(o.search)}getIconpackIcon(e,t,n,o=!1){new i.default(e).withQueryArguments({fieldType:this.fieldType,iconfig:n}).get().then(async e=>{const i=await e.resolve();i&&(o?t(n,this.convertIcon(i.icon,n)):t(i,n))})}updateContent(e,t){this.elementSearch.querySelector('input').value='',null!==e.iconpackOptions&&(this.elementOptions.innerHTML=e.iconpackOptions),null!==e.iconpackIcons&&(this.elementIcons.innerHTML=e.iconpackIcons),this.initializeOptionFields(),this.initializeIconWall()}initializeStyleField(){this.elementStyles.addEventListener('change',()=>{n.default.getIcon('spinner-circle',n.default.sizes.large,null,null,n.default.markupIdentifiers.inline).then(async e=>{this.elementIcons.innerHTML='<div class="icons-loading">'+e+'</div>'}),this.iconfigBackup&&this.iconfigBackup.iconpack&&(this.iconfigBackup.iconpackStyle===this.iconfig.iconpackStyle?this.iconfig=this.iconfigBackup:this.iconfigBackup.iconpack===this.iconfig.iconpack&&(this.iconfig.options=this.iconfigBackup.options)),this.getIconpackIcon(TYPO3.settings.ajaxUrls.iconpack_modal_update,this.updateContent.bind(this),this.elementStyles.value)})}initializeOptionFields(){this.elementOptions.querySelectorAll('.iconpack-option').forEach(e=>{const t=e.getAttribute('data-key');this.iconfig&&this.iconfig.options[t]&&this.setFieldValue(e,this.iconfig.options[t]),e.addEventListener('change',()=>{if(this.iconfig&&this.iconfig.icon){const e=this.elementIcons.querySelector('[name="'+this.iconfig.icon+'"]');e&&(this.elementIconSelection.innerHTML=e.innerHTML)}this.applyOptions()})})}getFieldAttributes(e){let t=null;return e&&(e.matches('[type="checkbox"]')?t=this.getDataAttributeFromCheckbox(e,'attributes'):'select'===e.tagName.toLowerCase()&&(t=this.getDataAttributeFromSelectOption(e,'attributes'))),t?JSON.parse(t):null}getDataAttributeFromCheckbox(e,t){return e.checked?e.getAttribute('data-attributes'):null}getDataAttributeFromSelectOption(e,t){return e.options[e.selectedIndex].dataset[t]}getFieldValue(e){let t=null;return e&&(e.matches('[type="checkbox"]')?t=e.checked:'select'===e.tagName.toLowerCase()&&(t=e.value)),''!==t?t:null}setFieldValue(e,t){e.matches('[type="checkbox"]')?e.checked=t:'select'===e.tagName.toLowerCase()&&(e.value=t.toString())}initializeSearchField(){const e=this.elementSearch.querySelector('input'),t=this.elementSearch.querySelector('button'),i=this.elementSearch.parentElement.removeChild(this.elementSearch);this.elementModalFooter.prepend(i),t.addEventListener('click',()=>{e.value='',e.dispatchEvent(new Event('input'))}),e.addEventListener('input',()=>{const i=e.value;t.style.visibility=''!==i?'visible':'hidden',this.searchIcon(i)})}initializeIconWall(){this.elementIcons.querySelectorAll('li').forEach(e=>{const t=e.getAttribute('name');this.iconfig&&this.iconfig.icon&&this.iconfig.icon===t&&e.classList.add('active'),e.addEventListener('click',e=>{const i=e.currentTarget;i.parentNode.querySelectorAll('li').forEach(e=>{e.classList.remove('active')}),i.classList.add('active'),this.selectIcon(t)},!0),e.addEventListener('dblclick',()=>{const e=this.elementModalFooter.querySelector('button[name="ok"]');e.dispatchEvent(new Event('click'))},!0),e.addEventListener('mouseover',e=>{const t=e.currentTarget,i=t.getAttribute('data-title');this.elementTooltip.innerHTML=i,this.elementTooltip.style.display='block'},!0),e.addEventListener('mouseleave',()=>{this.elementTooltip.innerHTML='',this.elementTooltip.style.display='none'},!0)})}selectIcon(e){const t=this.elementStyles.options[this.elementStyles.selectedIndex].value,i=this.elementIcons.querySelector('[name="'+e+'"]').innerHTML;this.elementIconSelection.innerHTML=i,this.iconfig=this.convertIconfigToObject(t+','+e),this.applyOptions()}applyOptions(){let e=[];const t={options:{}};this.elementOptions.querySelectorAll('.iconpack-option').forEach(i=>{const n=i.getAttribute('data-key'),o=this.getFieldAttributes(i);o&&e.push(o);const l=this.getFieldValue(i);l&&(t.options[n]=l)}),this.mergeIconfig(t),this.mergeAttributesIntoIconSelection(e)}mergeAttributesIntoIconSelection(e){let t=this.elementIconSelection.firstElementChild;for(const i in e)for(const n in e[i]){let o=e[i][n];switch(n){case'class':t.classList.add(o);break;case'style':const e=o.split(';');for(let i=0;i<e.length;i++){const n=e[i].split(':');''!==n[0]&&t.style.setProperty(n[0],n[1])}break;default:t.setAttribute(n,o.toString())}}}searchIcon(e){this.elementIcons.querySelectorAll('section').forEach(t=>{let i=!1;t.querySelectorAll('li').forEach(t=>{const n=t.getAttribute('name');n&&n.indexOf(e)>=0?(t.style.display='inline-flex',i=!0):t.style.display='none'}),t.style.display=i?'block':'none'})}convertIcon(e,t){if(e){e.attributes['data-iconfig']=t;let i=document.createElementNS('http://www.w3.org/2000/svg',e.elementName);for(const t in e.attributes){const n=e.attributes[t].toString();i.setAttribute(t,n)}if('svg'===e.elementName){i.innerHTML=e.innerHtml;const t=new DOMParser,n=t.parseFromString(i.outerHTML.toString(),'image/svg+xml'),o=(new XMLSerializer).serializeToString(n);i=o}else i=i.outerHTML.toString();return i}return''}injectCSS(){const e=this.iconpackModal.querySelector(o.styleSheets),t=JSON.parse(e.value);for(let e in t){const i=t[e];if(!window.parent.document.head.querySelector('link[href="'+i+'"]')){const t=document.createElement('link');t.rel='stylesheet',t.type='text/css',t.href=i,t.dataset.iconpack='iconpack['+e+']',window.parent.document.head.appendChild(t)}}}unlinkCSS(){const e=window.parent.document.head.querySelectorAll('link[data-iconpack]');for(let t=0;t<e.length;t++)e[t].parentNode.removeChild(e[t])}convertIconfigToObject(e){let t=null;if(e){const i=e.split(','),n=i[0].split(':'),o={};t={iconpackStyle:i[0]||null,iconpack:n[0]||null,style:n[1]||null,icon:i[1]||null,options:o};for(let e=2;e<i.length;e++){const n=i[e].split(':');n[1].match(/^true|false$/gi)?'true'===n[1]&&(t.options[n[0]]=!0):t.options[n[0]]=n[1]}}return t}convertIconfigToString(e){let t=null;if(e&&(t=e.iconpackStyle+','+e.icon,e.options))for(let i in e.options)t+=','+i+':'+e.options[i];return t}mergeIconfig(e){this.iconfig=Object.assign(Object.assign({},this.iconfig),e),this.iconfigBackup=this.iconfig}};return l});
